buildscript {
    repositories {
        mavenCentral()
    }
}
plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0' apply false
    id 'io.spring.dependency-management' version '1.1.2' apply false
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

allprojects {
    group = 'com'
    version = '0.0.1-SNAPSHOT'
    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: "org.springframework.boot"
    apply plugin: "io.spring.dependency-management"
    apply plugin: "java"

    sourceCompatibility = '17'
    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    dependencies {
        compileOnly "org.projectlombok:lombok"
        annotationProcessor "org.projectlombok:lombok"
        testCompileOnly "org.projectlombok:lombok"
        testAnnotationProcessor "org.projectlombok:lombok"

        // db column json type
        implementation 'io.hypersistence:hypersistence-utils-hibernate-60:3.3.1'
        implementation 'com.fasterxml.jackson.module:jackson-module-jakarta-xmlbind-annotations'
    }
    test {
        useJUnitPlatform()
    }
    // 테스트 코드를 제외한 빌드 수행
    tasks.withType(Test) {
        enabled = false
    }
}

project(':colosseo-api') {
    bootJar { enabled = true }
    jar { enabled = false }
}

project(':colosseo-core') {
    bootJar { enabled = false } // main()으로 실행시키지 않을 모듈
    jar { enabled = true } // 하지만 jar 파일이 만들어여야만 다른 모듈에서 의존 가능
}

project(':colosseo-chat') {
    bootJar { enabled = true }
    jar { enabled = false }
}